# Plot
p1 <- am_dotplot(gr, main = "Grid experiment", cbPalette = c('#ca0020', '#f4a582', '#92c5de', '#0571b0'), annot = "letters", method = "BH")+ theme(panel.grid.major.y = element_line(size = 1, colour = "grey90"), plot.title = element_text(hjust = .5), axis.text = element_text(size = 14))
# Save
## Summary
am_save(grs, "Exp001")
## Statistics
am_save(grst, "Exp001")
## Plot
am_save(p1, "Exp001.jpeg", width = 29, height = 21, units = "cm", dpi = 300)
end_time <- Sys.time()
end_time - start_time
t <- vector()
t <- rep(NA, 100)
t
t <- rep(NA, 100)
for(i in 1:100){
start_time <- Sys.time()
# Load libraries
library(Ramf)
library(ggplot2)
# Read data in
f <- dir(system.file("extdata", package = "Ramf"), full.names = TRUE, pattern = "grid.csv")
gr <- readData(f, type = "grid")
# Summary
grs <- am_summary(gr)
# Statistics
grst <- am_stat(gr, method = "fdr")
# Plot
p1 <- am_dotplot(gr, main = "Grid experiment", cbPalette = c('#ca0020', '#f4a582', '#92c5de', '#0571b0'), annot = "letters", method = "BH")+ theme(panel.grid.major.y = element_line(size = 1, colour = "grey90"), plot.title = element_text(hjust = .5), axis.text = element_text(size = 14))
# Save
## Summary
am_save(grs, "Exp001")
## Statistics
am_save(grst, "Exp001")
## Plot
am_save(p1, "Exp001.jpeg", width = 29, height = 21, units = "cm", dpi = 300)
end_time <- Sys.time()
t[i] <- end_time - start_time
}
t
mean(t)
sd(t)
# Load libraries
library(Ramf)
library(ggplot2)
# Read data in
f <- dir(system.file("extdata", package = "Ramf"), full.names = TRUE, pattern = "grid.csv")
gr <- readData(f, type = "grid")
# Summary
grs <- am_summary(gr)
# Statistics
grst <- am_stat(gr, method = "fdr")
# Plot
p1 <- am_dotplot(gr, main = "Grid experiment", cbPalette = c('#ca0020', '#f4a582', '#92c5de', '#0571b0'), annot = "letters", method = "BH")+ theme(panel.grid.major.y = element_line(size = 1, colour = "grey90"), plot.title = element_text(hjust = .5), axis.text = element_text(size = 14))
# Save
## Summary
am_save(grs, "Exp001")
## Statistics
am_save(grst, "Exp001")
## Plot
am_save(p1, "Exp001.jpeg", width = 29, height = 21, units = "cm", dpi = 300)
sd(t)
x <- data_frame(x = 1:100, y = 1:100)
# Number of repetitions (change this number to test)
n <- 30
y <- 0:n
sw <- data_frame(x1 = rep(0:(n-1), each = 2),
y1 = rep(c(0, 80, 80, 0), (n/2)),
x2 = c(0, rep(1:(n), each = 2))[-(n * 2)],
y2 = rep(c(80, 80, 0, 0), (n/2)))
library(tidyverse)
sw <- data_frame(x1 = rep(0:(n-1), each = 2),
y1 = rep(c(0, 80, 80, 0), (n/2)),
x2 = c(0, rep(1:(n), each = 2))[-(n * 2)],
y2 = rep(c(80, 80, 0, 0), (n/2)))
c(0, rep(1:(n), each = 2))[-(n * 2)]
rep(0:(n-1), each = 2)
c(0, rep(1:(n), each = 2))
-(n * 2)
library(tidyverse)
df <- data_frame(x = 1:x, y = 1:(y + y * 20 / 100))
library(tidyverse)
df <- data_frame(x = 1:x, y = 1:(y + y * 20 / 100))
h = 80
x = 100
interval = 0.083
y = 1:(h + h * 20 / 100)
df <- data_frame(x = 1:x, y = 1:(h + h * 20 / 100))
df <- data_frame(x = 1:100, y = 1:100))
df
df <- data_frame(x = 1:100, y = 1:100))
df <- data_frame(x = 1:100, y = 1:100)
df
n = 30
rep(0:(n-1), each = 2)
seq(0, (n-1), interval)
rep(seq(0, (n-1), interval), each = 2)
rep(c(0, h, h, 0), (n/2))
x1 = rep(seq(0, (n-1), interval), each = 2)
x1
rep(seq(0, x, interval), each = 2)
x = 10
x1
x = 1
x1 = rep(seq(0, x, interval), each = 2)
x1
rep(c(0, h, h, 0), (n/2))
y1 = rep(c(0, h, h, 0), (x1/2))
y1 = rep(c(0, h, h, 0), (length(x1)/2))
y1
x2 = c(0, rep(1:(length(x1)), each = 2))[-(length(x1) * 2)]
x2
y2 = rep(c(h, h, 0, 0), (length(x1)/2)))
y2 = rep(c(h, h, 0, 0), (n/2)))
y2 = rep(c(h, h, 0, 0), (length(x1)/2))
y2
df2 <- data_frame(x1, y1, x2, y2)
x1
y1
y1 = rep(c(0, h, h, 0), (length(x1)/4))
y1
y1 = rep(c(0, h, h, 0), (length(x1)/3))
y1
x1
c(0, h, h, 0)
y1 = rep(c(0, h, h, 0), (length(x1)))[1:length(x1)]
y1
x2 = c(0, rep(1:(length(x1)), each = 2))
x2
(length(x1) * 2)
x2 = c(0, rep(1:(length(x1)), each = 2))[1:length(x1)]
x2
x1
x2 = c(0, rep(seq(1, x, interval)), each = 2)
x2
x2 = c(0, rep(seq(1, x, interval), each = 2))
x2
x2 = c(0, rep(seq(0, x, interval), each = 2))
x2
x2 = c(0, rep(1:(n), each = 2))[-(n * 2)]
x2
x2 = c(0, rep(seq(0 + interval, x, interval), each = 2))
x2
y2 = rep(c(h, h, 0, 0), (length(x1)/2))
y2
y2 = rep(c(h, h, 0, 0), (length(x1)))[1:length(x1)]
y2
x1 = rep(seq(0, x, interval), each = 2)
y1 = rep(c(0, h, h, 0), (length(x1)))[1:length(x1)]
x2 = c(0, rep(seq(0 + interval, x, interval), each = 2))
y2 = rep(c(h, h, 0, 0), (length(x1)))[1:length(x1)]
df2 <- data_frame(x1, y1, x2, y2)
x1
x2
x2 = c(0, rep(seq(0 + interval, x + interval, interval), each = 2))
x2
df2 <- data_frame(x1, y1, x2, y2)
x2 = c(0, rep(seq(0 + interval, x + interval, interval), each = 2))[1:length(x1)]
df2
df2 <- data_frame(x1, y1, x2, y2)
df2
ggplot(df, aes(x, y)) +
geom_segment(data = df2,
aes(x = x1,
xend = x2,
y = y1,
yend = y2))
pippo <- function(h = 80, x = 1, interval = 0.083){
df <- data_frame(x = 1:100, y = 1:100)
y <- 0:h
x1 = rep(seq(0, x, interval), each = 2)
y1 = rep(c(0, h, h, 0), (length(x1)))[1:length(x1)]
x2 = c(0, rep(seq(0 + interval, x + interval, interval), each = 2))[1:length(x1)]
y2 = rep(c(h, h, 0, 0), (length(x1)))[1:length(x1)]
df2 <- data_frame(x1, y1, x2, y2)
ggplot(df, aes(x, y)) +
geom_segment(data = df2,
aes(x = x1,
xend = x2,
y = y1,
yend = y2))
}
pippo
pippo(h = 40, x = 1, interval = 0.083)
pippo(h = 40, x = 1.2, interval = 0.083)
pippo(h = 40, x = 2, interval = 0.083)
pippo(h = 40, x = 1, interval = 0.1)
pippo(h = 40, x = 1, interval = 1)
pippo(h = 40, x = 1, interval = 10)
pippo(h = 40, x = 1, interval = .01)
pippo(h = 40, x = 1, interval = .1)
ggplot(df, aes(x, y)) +
geom_segment(data = df2,
aes(x = x1,
xend = x2,
y = y1,
yend = y2)) +
theme_light()
ggplot(df, aes(x, y)) +
geom_segment(data = df2,
aes(x = x1,
xend = x2,
y = y1,
yend = y2)) +
theme_minimal()
ggplot(df, aes(x, y)) +
geom_segment(data = df2,
aes(x = x1,
xend = x2,
y = y1,
yend = y2)) +
theme_bw()
ggplot(df, aes(x, y)) +
geom_segment(data = df2,
aes(x = x1,
xend = x2,
y = y1,
yend = y2)) +
theme_classic()
ggplot(df, aes(x, y)) +
geom_segment(data = df2,
aes(x = x1,
xend = x2,
y = y1,
yend = y2)) +
theme_classic() +
labs(x = "",
y = "")
pippo(h = 40, x = 1, interval = .2)
pippo <- function(h = 80, x = 1, interval = 0.083){
df <- data_frame(x = 1:100, y = 1:100)
y <- 0:h
x1 = rep(seq(0, x, interval), each = 2)
y1 = rep(c(0, h, h, 0), (length(x1)))[1:length(x1)]
x2 = c(0, rep(seq(0 + interval, x + interval, interval), each = 2))[1:length(x1)]
y2 = rep(c(h, h, 0, 0), (length(x1)))[1:length(x1)]
df2 <- data_frame(x1, y1, x2, y2)
ggplot(df, aes(x, y)) +
geom_segment(data = df2,
aes(x = x1,
xend = x2,
y = y1,
yend = y2)) +
theme_classic() +
labs(x = "",
y = "")
}
pippo(h = 40, x = 1, interval = .2)
pippo(h = 40, x = 3, interval = .2)
pippo(h = 10, x = 3, interval = .2)
pippo(h = 10, x = 30, interval = .2)
pippo(h = 10, x = 10, interval = .2)
library(tidyverse)
ggplot(mtcars, aes(cyl, disp)) +
geom_point()
ggplot(mtcars, aes(cyl, disp, shape = cyl)) +
geom_point()
ggplot(mtcars, aes(cyl, disp, shape = factor(cyl))) +
geom_point()
ggplot(mtcars, aes(cyl, disp, shape = factor(cyl))) +
geom_point(aes(fill = "significant"))
ggplot(mtcars, aes(cyl, disp, shape = factor(cyl))) +
geom_point(aes(fill = "significant")) +
guide_legend(title.position = "none")
ggplot(mtcars, aes(cyl, disp, shape = factor(cyl))) +
geom_point(aes(fill = "significant")) +
guide_legend(title.position = NULL)
ggplot(mtcars, aes(cyl, disp, shape = factor(cyl))) +
geom_point(aes(fill = "significant")) +
guide_legend(title.position = NULL)
ggplot(mtcars, aes(cyl, disp, shape = factor(cyl))) +
geom_point(aes(fill = "significant")) +
guide_legend(label = FALSE)
ggplot(mtcars, aes(cyl, disp, shape = factor(cyl))) +
geom_point(aes(fill = "significant"))
ggplot(mtcars, aes(cyl, disp, shape = factor(cyl))) +
geom_point(aes(fill = "significant")) +
guides(fill = guide_legend(label = FALSE))
ggplot(mtcars, aes(cyl, disp, shape = factor(cyl))) +
geom_point(aes(fill = "significant")) +
guides(fill = guide_legend(title = "LEFT", title.position = "left"))
label = FALSE
ggplot(mtcars, aes(cyl, disp, shape = factor(cyl))) +
geom_point(aes(fill = "significant")) +
guides(fill = guide_legend(label = FALSE))
ggplot(mtcars, aes(cyl, disp, shape = factor(cyl))) +
geom_point(aes(fill = "significant")) +
guides(fill = guide_legend(title.position = NULL))
ggplot(mtcars, aes(cyl, disp, shape = factor(cyl))) +
geom_point(aes(fill = "significant")) +
guides(fill = guide_legend(title = "LEFT", title.position = "left"))
ggplot(mtcars, aes(cyl, disp, shape = factor(cyl))) +
geom_point(aes(fill = "significant")) +
guides(fill = guide_legend(title = "", title.position = "left"))
ggplot(mtcars, aes(cyl, disp, shape = factor(cyl))) +
geom_point(aes(fill = "significant")) +
guides(fill = guide_legend(title = ""))
ggplot(mtcars, aes(cyl, disp, shape = factor(cyl))) +
geom_point(aes(fill = "significant")) +
guides(fill = guide_legend(title = ""),
title.theme = element_text(
size = 15,
face = "italic",
colour = "red",
angle = 0
))
ggplot(mtcars, aes(cyl, disp, shape = factor(cyl))) +
geom_point(aes(fill = "significant")) +
guides(fill = guide_legend(title = "PIPPO"),
title.theme = element_text(
size = 15,
face = "italic",
colour = "red",
angle = 0
))
runExample("04_mpg")
librry(shuny)
library(shuny)
library(shiny)
runExample("04_mpg")
runExample("07_widgets")
install.packages("gsheet")
.libPaths()
x <- download.file("https://raw.githubusercontent.com/swcarpentry/r-novice-gapminder/gh-pages/_episodes_rmd/data/gapminder_data.csv", "delete.csv")
x <- read.csv("delete.csv")
x
library(Ramf)
f <- dir(system.file("extdata", package = "Ramf"), full.names = TRUE, pattern = "grid.csv")
x <- readData(f, type = "grid")
names(x)
am_anova <- function(x, col = c("Total", "Hyphopodia", "IntrHyphae",
"Arbuscules", "Vesicles")){
col <- match.arg(col)
pv <- kruskal(x[names(x) %in% col], (x$Samples))$statistics$p.chisq
if(pv < 0.05){
message(paste0("The pvalue is ", pv, ". There are significant differences in ", col, " feature."))
} else{
message(paste0("The pvalue is ", pv, ". There are NOT significant differences in ", col, " feature."))
}
am_anova(x, col = "Tot")
library(Ramf)
am_anova(x, col = "Tot")
library(agricolae)
am_anova(x, col = "Tot")
am_anova(x, col = "Totol")
x <- read.csv("~/Documents/001_WORK/CCP/works/tmp/testRamf/grid/Ramf_test.csv")
am_2anova <- function(x, col = c("Total", "Arbuscules")){
col <- match.arg(col)
pp <- aov(x[,names(x) %in% col] ~ x$Samples + x$trt)
plot(pp, 1)
plot(pp, 2)
pv <- summary(aov(x[,names(x) %in% col] ~ x$Samples * x$trt))[[1]][["Pr(>F)"]]
if(pv[1] < 0.05){
message(paste0("The pvalue for Samples is ", pv[1], ". There are significant differences in ", col, " feature.\n"))
} else{
message(paste0("The pvalue for Samples is ", pv[1], ". There are NOT significant differences in ", col, " feature.\n\n"))
}
if(pv[2] < 0.05){
message(paste0("The pvalue for treatment is ", pv[2], ". There are significant differences in ", col, " feature.\n"))
} else{
message(paste0("The pvalue for treatment is ", pv[2], ". There are NOT significant differences in ", col, " feature."))
}
if(pv[3] < 0.05){
message(paste0("The pvalue for Sample-treatment interaction is ", pv[2], ". There are significant differences in ", col, " feature.\n"))
} else{
message(paste0("The pvalue for Sample-treatment interaction is ", pv[2], ". There are NOT significant differences in ", col, " feature."))
}
am_2anova(x, col = "Total")
y <- readData("~/Documents/001_WORK/CCP/works/tmp/testRamf/grid/Ramf_test_v2.csv",
type = "grid")
am_anova(y, col = "Vesicles")
y
z2 <- z %>%
separate(Samples, into = c("Samples", "trt"), sep = "-")
library(tidyverse)
z2 <- z %>%
separate(Samples, into = c("Samples", "trt"), sep = "-")
z2 <- y %>%
separate(Samples, into = c("Samples", "trt"), sep = "-")
y
z <- readData("~/Documents/001_WORK/CCP/works/tmp/testRamf/grid/Ramf_test.csv",
type = "grid")
z2 <- z %>%
separate(Samples, into = c("Samples", "trt"), sep = "-")
z2
am_2anova(z2, col = "Total")
am_2anova <- function(x, col = c("Total", "Hyphopodia", "IntrHyphae",
"Arbuscules", "Vesicles")){
col <- match.arg(col)
pp <- aov(x[,names(x) %in% col] ~ x$Samples + x$trt)
plot(pp, 1)
plot(pp, 2)
pv <- summary(aov(x[,names(x) %in% col] ~ x$Samples * x$trt))[[1]][["Pr(>F)"]]
if(pv[1] < 0.05){
message(paste0("The pvalue for Samples is ", pv[1], ". There are significant differences in ", col, " feature.\n"))
} else{
message(paste0("The pvalue for Samples is ", pv[1], ". There are NOT significant differences in ", col, " feature.\n\n"))
}
if(pv[2] < 0.05){
message(paste0("The pvalue for treatment is ", pv[2], ". There are significant differences in ", col, " feature.\n"))
} else{
message(paste0("The pvalue for treatment is ", pv[2], ". There are NOT significant differences in ", col, " feature."))
}
if(pv[3] < 0.05){
message(paste0("The pvalue for Sample-treatment interaction is ", pv[2], ". There are significant differences in ", col, " feature.\n"))
} else{
message(paste0("The pvalue for Sample-treatment interaction is ", pv[2], ". There are NOT significant differences in ", col, " feature."))
}
am_2anova(z2, col = "Total")
x <- read.csv("~/Documents/001_WORK/CCP/works/tmp/testRamf/grid/Ramf_test.csv")
x
x2 <- x %>%
separate(Samples, into = c("Samples", "trt"), sep = "-")
x
x <- x %>%
separate(Samples, into = c("Samples", "trt"), sep = "-")
pp <- aov(x[,names(x) %in% col] ~ x$Samples + x$trt)
col = "Total"
pp <- aov(x[,names(x) %in% col] ~ x$Samples + x$trt)
pp
plot(pp, 1)
plot(pp, 2)
pv <- summary(aov(x[,names(x) %in% col] ~ x$Samples * x$trt))[[1]][["Pr(>F)"]]
pv
am_2anova <- function(x, col = c("Total", "Hyphopodia", "IntrHyphae",
"Arbuscules", "Vesicles")){
col <- match.arg(col)
pp <- aov(x[,names(x) %in% col] ~ x$Samples + x$trt)
plot(pp, 1)
plot(pp, 2)
pv <- summary(aov(x[,names(x) %in% col] ~ x$Samples * x$trt))[[1]][["Pr(>F)"]]
if(pv[1] < 0.05){
message(paste0("The pvalue for Samples is ", pv[1], ". There are significant differences in ", col, " feature.\n"))
} else{
message(paste0("The pvalue for Samples is ", pv[1], ". There are NOT significant differences in ", col, " feature.\n\n"))
}
if(pv[2] < 0.05){
message(paste0("The pvalue for treatment is ", pv[2], ". There are significant differences in ", col, " feature.\n"))
} else{
message(paste0("The pvalue for treatment is ", pv[2], ". There are NOT significant differences in ", col, " feature."))
}
if(pv[3] < 0.05){
message(paste0("The pvalue for Sample-treatment interaction is ", pv[2], ". There are significant differences in ", col, " feature.\n"))
} else{
message(paste0("The pvalue for Sample-treatment interaction is ", pv[2], ". There are NOT significant differences in ", col, " feature."))
}
am_2anova(x, col = "Total")
x
x$Samples
x$Total
# install.packages("remotes")
remotes::install_github("djnavarro/workbch")
library(workbch)
view_jobs()
library(workbch)
view_jobs()
options(workbch.home = "~/Downloads/")
view_jobs()
make_job(
jobname = "workitout",
description = "sip martinis and party in France",
owner = "britney"
)
view_jobs()
set_priority(priority = 3, jobname = "workitout")
view_jobs()
view_job("workitout")
set_note("check if this worked", "workitout")
view_job("workitout")
view_notes("workitout")
set_note("Prova", "workitout")
view_tasks("workitout")
view_notes("workitout")
set_task("Prova", "workitout")
view_tasks("workitout")
set_task("Prova", "workitout")
set_task("Prova", "workitout", "britney")
view_tasks("workitout")
view_job("workitout")
view_notes("workitout")
view_taglist("workitout")
view_tasks("workitout")
set_status("abandoned", "workitout")
view_job("workitout")
view_job()
view_jobs()
setwd("~/Documents/001_WORK/CCP/works/Ramf")
install.packages("pkgdown")
library(pkgdown)
init_site(pkg = ".")
getwd()
build_site()
getwd()
dir()
build_favicon()
=build_favicon()
?build_favicon()
build_favicon()
build_site()
build_favicon()
build_site()
usethis::use_news_md()
build_news()
template_articles()
build_site()
use_citation()
usethis::use_citation()
library(usethis)
use_citation()
use_article()
getwd
getwd()
